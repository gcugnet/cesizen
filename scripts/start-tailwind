#!/bin/sh

BOLD_MAGENTA="\033[1;35m"
BOLD_RED="\033[1;31m"
NC="\033[0m"

print_error() {
    printf "${BOLD_RED}Error: command failed with status $STATUS${NC}\n"
}

printf "${BOLD_MAGENTA}Starting Tailwind watcherâ€¦${NC}\n"

# Check if we're in the project root
if [ -d "./frontend/cesizen-app" ]; then
    cd frontend/cesizen-app && npx tailwindcss -i ./input.css -o ./assets/tailwind.css --watch
    STATUS=$?
    if [ $STATUS -ne 0 ]; then
        print_error
        exit $STATUS
    fi
fi

# Check if we're in the frontend directory
if [ -d "./cesizen-app" ]; then
    cd cesizen-app && npx tailwindcss -i ./input.css -o ./assets/tailwind.css --watch
    STATUS=$?
    if [ $STATUS -ne 0 ]; then
        print_error
        exit $STATUS
    fi
fi

# Check if we're already in the app directory
if [ -f "./input.css" ] && [ -d "./assets" ]; then
    npx tailwindcss -i ./input.css -o ./assets/tailwind.css --watch
    STATUS=$?
    if [ $STATUS -ne 0 ]; then
        print_error
        exit $STATUS
    fi
fi

# If we get here, we couldn't find the right directory
printf "${BOLD_RED}Error: Could not find the cesizen-app directory with input.css${NC}\n"
printf "${BOLD_RED}Make sure you run this script from within the project structure:${NC}\n"
printf "${BOLD_RED}- Project root${NC}\n"
printf "${BOLD_RED}- frontend directory${NC}\n"
printf "${BOLD_RED}- cesizen-app directory${NC}\n"
exit 1
